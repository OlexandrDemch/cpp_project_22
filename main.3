#include <iostream>

const int* findSubset(const int* A, int sizeA, const int* B, int sizeB) {
    for (int i = 0; i <= sizeA - sizeB; i++) {
        bool found = true;

        for (int j = 0; j < sizeB; j++) {
            if (A[i + j] != B[j]) {
                found = false;
                break;
            }
        }

        if (found) {
            return &A[i]; 
        }
    }

    return nullptr;  
}

int main() {
    int A[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
    int B[] = { 3, 4, 5 };
    int sizeA = sizeof(A) / sizeof(A[0]);
    int sizeB = sizeof(B) / sizeof(B[0]);

    const int* subsetStart = findSubset(A, sizeA, B, sizeB);

    if (subsetStart != nullptr) {
        std::cout << "Subset found at index: " << subsetStart - A << std::endl;
    }
    else {
        std::cout << "Subset not found" << std::endl;
    }

    return 0;
}
